{'type': 'FunctionDefinition', 'name': 'IDonate.getDonation', 'start_line': 23, 'end_line': 23, 'offset_start': 597, 'offset_end': 680, 'content': 'function getDonation(address user) external view returns (Donation memory donation);', 'contract_name': 'IDonate', 'contract_code': '{\n    error InsufficientMsgValue();\n    error InsufficientBalance();\n    error UnsupportedCurrency(Currency currency);\n    error WithdrawDonationFailed();\n    error InvalidNativeStargate();\n    error InvalidDonationReceiver();\n    error UnexpectedMsgValue();\n    event Donated(Currency currency, address from, address beneficiary, uint256 amount);\n    event DonationWithdrawn(Currency currency, address to, uint256 amount);\n    function getDonation(address user) external view returns (Donation memory donation);\n    function withdrawDonation(Currency currency, uint256 minAmount) external payable;\n    function donate(Currency currency, uint256 amount, address beneficiary) external payable;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IDonate.withdrawDonation', 'start_line': 24, 'end_line': 24, 'offset_start': 686, 'offset_end': 766, 'content': 'function withdrawDonation(Currency currency, uint256 minAmount) external payable;', 'contract_name': 'IDonate', 'contract_code': '{\n    error InsufficientMsgValue();\n    error InsufficientBalance();\n    error UnsupportedCurrency(Currency currency);\n    error WithdrawDonationFailed();\n    error InvalidNativeStargate();\n    error InvalidDonationReceiver();\n    error UnexpectedMsgValue();\n    event Donated(Currency currency, address from, address beneficiary, uint256 amount);\n    event DonationWithdrawn(Currency currency, address to, uint256 amount);\n    function getDonation(address user) external view returns (Donation memory donation);\n    function withdrawDonation(Currency currency, uint256 minAmount) external payable;\n    function donate(Currency currency, uint256 amount, address beneficiary) external payable;\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IDonate.donate', 'start_line': 25, 'end_line': 25, 'offset_start': 772, 'offset_end': 860, 'content': 'function donate(Currency currency, uint256 amount, address beneficiary) external payable;', 'contract_name': 'IDonate', 'contract_code': '{\n    error InsufficientMsgValue();\n    error InsufficientBalance();\n    error UnsupportedCurrency(Currency currency);\n    error WithdrawDonationFailed();\n    error InvalidNativeStargate();\n    error InvalidDonationReceiver();\n    error UnexpectedMsgValue();\n    event Donated(Currency currency, address from, address beneficiary, uint256 amount);\n    event DonationWithdrawn(Currency currency, address to, uint256 amount);\n    function getDonation(address user) external view returns (Donation memory donation);\n    function withdrawDonation(Currency currency, uint256 minAmount) external payable;\n    function donate(Currency currency, uint256 amount, address beneficiary) external payable;\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingComposer.composeQueue', 'start_line': 43, 'end_line': 48, 'offset_start': 1380, 'offset_end': 1541, 'content': 'function composeQueue(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index\n    ) external view returns (bytes32 messageHash);', 'contract_name': 'IMessagingComposer', 'contract_code': '{\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\n    event LzComposeAlert(\n        address indexed from,\n        address indexed to,\n        address indexed executor,\n        bytes32 guid,\n        uint16 index,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    function composeQueue(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index\n    ) external view returns (bytes32 messageHash);\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\n    function lzCompose(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingComposer.sendCompose', 'start_line': 49, 'end_line': 49, 'offset_start': 1547, 'offset_end': 1644, 'content': 'function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;', 'contract_name': 'IMessagingComposer', 'contract_code': '{\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\n    event LzComposeAlert(\n        address indexed from,\n        address indexed to,\n        address indexed executor,\n        bytes32 guid,\n        uint16 index,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    function composeQueue(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index\n    ) external view returns (bytes32 messageHash);\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\n    function lzCompose(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingComposer.lzCompose', 'start_line': 50, 'end_line': 57, 'offset_start': 1650, 'offset_end': 1849, 'content': 'function lzCompose(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;', 'contract_name': 'IMessagingComposer', 'contract_code': '{\n    event ComposeSent(address from, address to, bytes32 guid, uint16 index, bytes message);\n    event ComposeDelivered(address from, address to, bytes32 guid, uint16 index);\n    event LzComposeAlert(\n        address indexed from,\n        address indexed to,\n        address indexed executor,\n        bytes32 guid,\n        uint16 index,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    function composeQueue(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index\n    ) external view returns (bytes32 messageHash);\n    function sendCompose(address _to, bytes32 _guid, uint16 _index, bytes calldata _message) external;\n    function lzCompose(\n        address _from,\n        address _to,\n        bytes32 _guid,\n        uint16 _index,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Context._msgSender', 'start_line': 61, 'end_line': 63, 'offset_start': 1910, 'offset_end': 2005, 'content': 'function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }', 'contract_name': 'Context', 'contract_code': '{\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Context._msgData', 'start_line': 64, 'end_line': 66, 'offset_start': 2011, 'offset_end': 2109, 'content': 'function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }', 'contract_name': 'Context', 'contract_code': '{\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Context._contextSuffixLength', 'start_line': 67, 'end_line': 69, 'offset_start': 2115, 'offset_end': 2211, 'content': 'function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }', 'contract_name': 'Context', 'contract_code': '{\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'DonateAndClaim.tor', 'start_line': 86, 'end_line': 111, 'offset_start': 3000, 'offset_end': 3951, 'content': 'constructor(\n        address _donateContract,\n        address _claimContract,\n        address _stargateUsdc,\n        address _stargateUsdt,\n        address _stargateNative\n    ) {\n        donateContract = _donateContract;\n        claimContract = _claimContract;\n        if (_stargateUsdc != address(0)) {\n            stargateUsdc = _stargateUsdc;\n            tokenUsdc = IERC20(IOFT(stargateUsdc).token());\n            tokenUsdc.forceApprove(donateContract, type(uint256).max);\n        }\n        if (_stargateUsdt != address(0)) {\n            stargateUsdt = _stargateUsdt;\n            tokenUsdt = IERC20(IOFT(stargateUsdt).token());\n            tokenUsdt.forceApprove(donateContract, type(uint256).max);\n        }\n        if (_stargateNative != address(0)) {\n            stargateNative = _stargateNative;\n            if (IOFT(stargateNative).token() != address(0)) {\n                revert IDonate.InvalidNativeStargate();\n            }\n        }\n    }', 'contract_name': 'DonateAndClaim', 'contract_code': '{\n    using SafeERC20 for IERC20;\n    address public immutable donateContract;\n    address public immutable claimContract;\n    address public immutable stargateUsdc;\n    address public immutable stargateUsdt;\n    address public immutable stargateNative;\n    IERC20 public immutable tokenUsdc;\n    IERC20 public immutable tokenUsdt;\n    constructor(\n        address _donateContract,\n        address _claimContract,\n        address _stargateUsdc,\n        address _stargateUsdt,\n        address _stargateNative\n    ) {\n        donateContract = _donateContract;\n        claimContract = _claimContract;\n        if (_stargateUsdc != address(0)) {\n            stargateUsdc = _stargateUsdc;\n            tokenUsdc = IERC20(IOFT(stargateUsdc).token());\n            tokenUsdc.forceApprove(donateContract, type(uint256).max);\n        }\n        if (_stargateUsdt != address(0)) {\n            stargateUsdt = _stargateUsdt;\n            tokenUsdt = IERC20(IOFT(stargateUsdt).token());\n            tokenUsdt.forceApprove(donateContract, type(uint256).max);\n        }\n        if (_stargateNative != address(0)) {\n            stargateNative = _stargateNative;\n            if (IOFT(stargateNative).token() != address(0)) {\n                revert IDonate.InvalidNativeStargate();\n            }\n        }\n    }\n    function donateAndClaim(\n        Currency currency,\n        uint256 amountToDonate,\n        uint256 _zroAmount,\n        bytes32[] calldata _proof,\n        address _to,\n        bytes calldata _extraBytes\n    ) external payable returns (MessagingReceipt memory receipt) {\n        uint256 donateNativeAmount;\n        uint256 msgFee;\n        if (currency == Currency.USDC && stargateUsdc != address(0)) {\n            tokenUsdc.safeTransferFrom(msg.sender, address(this), amountToDonate);\n            msgFee = msg.value;\n        } else if (currency == Currency.USDT && stargateUsdt != address(0)) {\n            tokenUsdt.safeTransferFrom(msg.sender, address(this), amountToDonate);\n            msgFee = msg.value;\n        } else if (currency == Currency.Native && stargateNative != address(0)) {\n            if (msg.value < amountToDonate) revert IDonate.InsufficientMsgValue();\n            donateNativeAmount = amountToDonate;\n            msgFee = msg.value - donateNativeAmount;\n        } else {\n            revert IDonate.UnsupportedCurrency(currency);\n        }\n        IDonate(donateContract).donate{ value: donateNativeAmount }(currency, amountToDonate, msg.sender);\n        return IClaim(claimContract).claim{ value: msgFee }(msg.sender, currency, _zroAmount, _proof, _to, _extraBytes);\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'default', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'DonateAndClaim.donateAndClaim', 'start_line': 112, 'end_line': 137, 'offset_start': 3957, 'offset_end': 5250, 'content': 'function donateAndClaim(\n        Currency currency,\n        uint256 amountToDonate,\n        uint256 _zroAmount,\n        bytes32[] calldata _proof,\n        address _to,\n        bytes calldata _extraBytes\n    ) external payable returns (MessagingReceipt memory receipt) {\n        uint256 donateNativeAmount;\n        uint256 msgFee;\n        if (currency == Currency.USDC && stargateUsdc != address(0)) {\n            tokenUsdc.safeTransferFrom(msg.sender, address(this), amountToDonate);\n            msgFee = msg.value;\n        } else if (currency == Currency.USDT && stargateUsdt != address(0)) {\n            tokenUsdt.safeTransferFrom(msg.sender, address(this), amountToDonate);\n            msgFee = msg.value;\n        } else if (currency == Currency.Native && stargateNative != address(0)) {\n            if (msg.value < amountToDonate) revert IDonate.InsufficientMsgValue();\n            donateNativeAmount = amountToDonate;\n            msgFee = msg.value - donateNativeAmount;\n        } else {\n            revert IDonate.UnsupportedCurrency(currency);\n        }\n        IDonate(donateContract).donate{ value: donateNativeAmount }(currency, amountToDonate, msg.sender);\n        return IClaim(claimContract).claim{ value: msgFee }(msg.sender, currency, _zroAmount, _proof, _to, _extraBytes);\n    }', 'contract_name': 'DonateAndClaim', 'contract_code': '{\n    using SafeERC20 for IERC20;\n    address public immutable donateContract;\n    address public immutable claimContract;\n    address public immutable stargateUsdc;\n    address public immutable stargateUsdt;\n    address public immutable stargateNative;\n    IERC20 public immutable tokenUsdc;\n    IERC20 public immutable tokenUsdt;\n    constructor(\n        address _donateContract,\n        address _claimContract,\n        address _stargateUsdc,\n        address _stargateUsdt,\n        address _stargateNative\n    ) {\n        donateContract = _donateContract;\n        claimContract = _claimContract;\n        if (_stargateUsdc != address(0)) {\n            stargateUsdc = _stargateUsdc;\n            tokenUsdc = IERC20(IOFT(stargateUsdc).token());\n            tokenUsdc.forceApprove(donateContract, type(uint256).max);\n        }\n        if (_stargateUsdt != address(0)) {\n            stargateUsdt = _stargateUsdt;\n            tokenUsdt = IERC20(IOFT(stargateUsdt).token());\n            tokenUsdt.forceApprove(donateContract, type(uint256).max);\n        }\n        if (_stargateNative != address(0)) {\n            stargateNative = _stargateNative;\n            if (IOFT(stargateNative).token() != address(0)) {\n                revert IDonate.InvalidNativeStargate();\n            }\n        }\n    }\n    function donateAndClaim(\n        Currency currency,\n        uint256 amountToDonate,\n        uint256 _zroAmount,\n        bytes32[] calldata _proof,\n        address _to,\n        bytes calldata _extraBytes\n    ) external payable returns (MessagingReceipt memory receipt) {\n        uint256 donateNativeAmount;\n        uint256 msgFee;\n        if (currency == Currency.USDC && stargateUsdc != address(0)) {\n            tokenUsdc.safeTransferFrom(msg.sender, address(this), amountToDonate);\n            msgFee = msg.value;\n        } else if (currency == Currency.USDT && stargateUsdt != address(0)) {\n            tokenUsdt.safeTransferFrom(msg.sender, address(this), amountToDonate);\n            msgFee = msg.value;\n        } else if (currency == Currency.Native && stargateNative != address(0)) {\n            if (msg.value < amountToDonate) revert IDonate.InsufficientMsgValue();\n            donateNativeAmount = amountToDonate;\n            msgFee = msg.value - donateNativeAmount;\n        } else {\n            revert IDonate.UnsupportedCurrency(currency);\n        }\n        IDonate(donateContract).donate{ value: donateNativeAmount }(currency, amountToDonate, msg.sender);\n        return IClaim(claimContract).claim{ value: msgFee }(msg.sender, currency, _zroAmount, _proof, _to, _extraBytes);\n    }\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppCore.tor', 'start_line': 145, 'end_line': 149, 'offset_start': 5588, 'offset_end': 5800, 'content': 'constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }', 'contract_name': 'OAppCore', 'contract_code': '{\n    ILayerZeroEndpointV2 public immutable endpoint;\n    mapping(uint32 eid => bytes32 peer) public peers;\n    constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }\n    function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'default', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppCore.setPeer', 'start_line': 150, 'end_line': 152, 'offset_start': 5806, 'offset_end': 5913, 'content': 'function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }', 'contract_name': 'OAppCore', 'contract_code': '{\n    ILayerZeroEndpointV2 public immutable endpoint;\n    mapping(uint32 eid => bytes32 peer) public peers;\n    constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }\n    function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }\n}', 'modifiers': [None], 'stateMutability': None, 'returnParameters': [], 'visibility': 'public', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppCore._setPeer', 'start_line': 153, 'end_line': 156, 'offset_start': 5919, 'offset_end': 6052, 'content': 'function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }', 'contract_name': 'OAppCore', 'contract_code': '{\n    ILayerZeroEndpointV2 public immutable endpoint;\n    mapping(uint32 eid => bytes32 peer) public peers;\n    constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }\n    function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppCore._getPeerOrRevert', 'start_line': 157, 'end_line': 161, 'offset_start': 6058, 'offset_end': 6253, 'content': 'function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }', 'contract_name': 'OAppCore', 'contract_code': '{\n    ILayerZeroEndpointV2 public immutable endpoint;\n    mapping(uint32 eid => bytes32 peer) public peers;\n    constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }\n    function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppCore.setDelegate', 'start_line': 162, 'end_line': 164, 'offset_start': 6259, 'offset_end': 6363, 'content': 'function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }', 'contract_name': 'OAppCore', 'contract_code': '{\n    ILayerZeroEndpointV2 public immutable endpoint;\n    mapping(uint32 eid => bytes32 peer) public peers;\n    constructor(address _endpoint, address _delegate) {\n        endpoint = ILayerZeroEndpointV2(_endpoint);\n        if (_delegate == address(0)) revert InvalidDelegate();\n        endpoint.setDelegate(_delegate);\n    }\n    function setPeer(uint32 _eid, bytes32 _peer) public virtual onlyOwner {\n        _setPeer(_eid, _peer);\n    }\n    function _setPeer(uint32 _eid, bytes32 _peer) internal virtual {\n        peers[_eid] = _peer;\n        emit PeerSet(_eid, _peer);\n    }\n    function _getPeerOrRevert(uint32 _eid) internal view virtual returns (bytes32) {\n        bytes32 peer = peers[_eid];\n        if (peer == bytes32(0)) revert NoPeer(_eid);\n        return peer;\n    }\n    function setDelegate(address _delegate) public onlyOwner {\n        endpoint.setDelegate(_delegate);\n    }\n}', 'modifiers': [None], 'stateMutability': None, 'returnParameters': [], 'visibility': 'public', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IClaim.claim', 'start_line': 185, 'end_line': 191, 'offset_start': 7271, 'offset_end': 7493, 'content': 'function claim(\n        Currency currency,\n        uint256 zroAmount,\n        bytes32[] calldata proof,\n        address to,\n        bytes calldata extraBytes\n    ) external payable returns (MessagingReceipt memory receipt);', 'contract_name': 'IClaim', 'contract_code': '{\n    error AlreadyClaimed(address user);\n    error InsufficientDonation(Currency currency, uint256 expectedAmount, uint256 actualAmount);\n    error InvalidProof();\n    error InvalidNativeStargate();\n    error InvalidNativePrice();\n    error OnlyDonateAndClaim();\n    error DonateAndClaimAlreadySet();\n    error WithdrawFailed();\n    error MsgValueNotSupported();\n    error InvalidToAddress();\n    event MerkleRootSet(bytes32 merkleRoot);\n    event ZRORequested(address requester, uint256 zroAmount, address to);\n    event DonateAndClaimSet(address donateAndClaim);\n    event ZroWithdrawn(address to, uint256 amount);\n    event NativeWithdrawn(address to, uint256 amount);\n    function claim(\n        Currency currency,\n        uint256 zroAmount,\n        bytes32[] calldata proof,\n        address to,\n        bytes calldata extraBytes\n    ) external payable returns (MessagingReceipt memory receipt);\n    function claim(\n        address user,\n        Currency currency,\n        uint256 zroAmount,\n        bytes32[] calldata proof,\n        address to,\n        bytes calldata extraBytes\n    ) external payable returns (MessagingReceipt memory receipt);\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IClaim.claim', 'start_line': 192, 'end_line': 199, 'offset_start': 7499, 'offset_end': 7743, 'content': 'function claim(\n        address user,\n        Currency currency,\n        uint256 zroAmount,\n        bytes32[] calldata proof,\n        address to,\n        bytes calldata extraBytes\n    ) external payable returns (MessagingReceipt memory receipt);', 'contract_name': 'IClaim', 'contract_code': '{\n    error AlreadyClaimed(address user);\n    error InsufficientDonation(Currency currency, uint256 expectedAmount, uint256 actualAmount);\n    error InvalidProof();\n    error InvalidNativeStargate();\n    error InvalidNativePrice();\n    error OnlyDonateAndClaim();\n    error DonateAndClaimAlreadySet();\n    error WithdrawFailed();\n    error MsgValueNotSupported();\n    error InvalidToAddress();\n    event MerkleRootSet(bytes32 merkleRoot);\n    event ZRORequested(address requester, uint256 zroAmount, address to);\n    event DonateAndClaimSet(address donateAndClaim);\n    event ZroWithdrawn(address to, uint256 amount);\n    event NativeWithdrawn(address to, uint256 amount);\n    function claim(\n        Currency currency,\n        uint256 zroAmount,\n        bytes32[] calldata proof,\n        address to,\n        bytes calldata extraBytes\n    ) external payable returns (MessagingReceipt memory receipt);\n    function claim(\n        address user,\n        Currency currency,\n        uint256 zroAmount,\n        bytes32[] calldata proof,\n        address to,\n        bytes calldata extraBytes\n    ) external payable returns (MessagingReceipt memory receipt);\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.quote', 'start_line': 244, 'end_line': 244, 'offset_start': 9071, 'offset_end': 9180, 'content': 'function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.send', 'start_line': 245, 'end_line': 248, 'offset_start': 9186, 'offset_end': 9330, 'content': 'function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.verify', 'start_line': 249, 'end_line': 249, 'offset_start': 9336, 'offset_end': 9426, 'content': 'function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.verifiable', 'start_line': 250, 'end_line': 250, 'offset_start': 9432, 'offset_end': 9524, 'content': 'function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.initializable', 'start_line': 251, 'end_line': 251, 'offset_start': 9530, 'offset_end': 9625, 'content': 'function initializable(Origin calldata _origin, address _receiver) external view returns (bool);', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.lzReceive', 'start_line': 252, 'end_line': 258, 'offset_start': 9631, 'offset_end': 9823, 'content': 'function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.clear', 'start_line': 259, 'end_line': 259, 'offset_start': 9829, 'offset_end': 9932, 'content': 'function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.setLzToken', 'start_line': 260, 'end_line': 260, 'offset_start': 9938, 'offset_end': 9984, 'content': 'function setLzToken(address _lzToken) external;', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.lzToken', 'start_line': 261, 'end_line': 261, 'offset_start': 9990, 'offset_end': 10040, 'content': 'function lzToken() external view returns (address);', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.nativeToken', 'start_line': 262, 'end_line': 262, 'offset_start': 10046, 'offset_end': 10100, 'content': 'function nativeToken() external view returns (address);', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'ILayerZeroEndpointV2.setDelegate', 'start_line': 263, 'end_line': 263, 'offset_start': 10106, 'offset_end': 10154, 'content': 'function setDelegate(address _delegate) external;', 'contract_name': 'ILayerZeroEndpointV2', 'contract_code': '{\n    event PacketSent(bytes encodedPayload, bytes options, address sendLibrary);\n    event PacketVerified(Origin origin, address receiver, bytes32 payloadHash);\n    event PacketDelivered(Origin origin, address receiver);\n    event LzReceiveAlert(\n        address indexed receiver,\n        address indexed executor,\n        Origin origin,\n        bytes32 guid,\n        uint256 gas,\n        uint256 value,\n        bytes message,\n        bytes extraData,\n        bytes reason\n    );\n    event LzTokenSet(address token);\n    event DelegateSet(address sender, address delegate);\n    function quote(MessagingParams calldata _params, address _sender) external view returns (MessagingFee memory);\n    function send(\n        MessagingParams calldata _params,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory);\n    function verify(Origin calldata _origin, address _receiver, bytes32 _payloadHash) external;\n    function verifiable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function initializable(Origin calldata _origin, address _receiver) external view returns (bool);\n    function lzReceive(\n        Origin calldata _origin,\n        address _receiver,\n        bytes32 _guid,\n        bytes calldata _message,\n        bytes calldata _extraData\n    ) external payable;\n    function clear(address _oapp, Origin calldata _origin, bytes32 _guid, bytes calldata _message) external;\n    function setLzToken(address _lzToken) external;\n    function lzToken() external view returns (address);\n    function nativeToken() external view returns (address);\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Ownable.tor', 'start_line': 272, 'end_line': 277, 'offset_start': 10490, 'offset_end': 10676, 'content': 'constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }', 'contract_name': 'Ownable', 'contract_code': '{\n    address private _owner;\n    error OwnableUnauthorizedAccount(address account);\n    error OwnableInvalidOwner(address owner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'default', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Ownable.owner', 'start_line': 282, 'end_line': 284, 'offset_start': 10749, 'offset_end': 10833, 'content': 'function owner() public view virtual returns (address) {\n        return _owner;\n    }', 'contract_name': 'Ownable', 'contract_code': '{\n    address private _owner;\n    error OwnableUnauthorizedAccount(address account);\n    error OwnableInvalidOwner(address owner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'public', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Ownable._checkOwner', 'start_line': 285, 'end_line': 289, 'offset_start': 10839, 'offset_end': 11000, 'content': 'function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }', 'contract_name': 'Ownable', 'contract_code': '{\n    address private _owner;\n    error OwnableUnauthorizedAccount(address account);\n    error OwnableInvalidOwner(address owner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Ownable.renounceOwnership', 'start_line': 290, 'end_line': 292, 'offset_start': 11006, 'offset_end': 11106, 'content': 'function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }', 'contract_name': 'Ownable', 'contract_code': '{\n    address private _owner;\n    error OwnableUnauthorizedAccount(address account);\n    error OwnableInvalidOwner(address owner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}', 'modifiers': [None], 'stateMutability': None, 'returnParameters': [], 'visibility': 'public', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Ownable.transferOwnership', 'start_line': 293, 'end_line': 298, 'offset_start': 11112, 'offset_end': 11326, 'content': 'function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }', 'contract_name': 'Ownable', 'contract_code': '{\n    address private _owner;\n    error OwnableUnauthorizedAccount(address account);\n    error OwnableInvalidOwner(address owner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}', 'modifiers': [None], 'stateMutability': None, 'returnParameters': [], 'visibility': 'public', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Ownable._transferOwnership', 'start_line': 299, 'end_line': 303, 'offset_start': 11332, 'offset_end': 11518, 'content': 'function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }', 'contract_name': 'Ownable', 'contract_code': '{\n    address private _owner;\n    error OwnableUnauthorizedAccount(address account);\n    error OwnableInvalidOwner(address owner);\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppSender.oAppVersion', 'start_line': 314, 'end_line': 316, 'offset_start': 12035, 'offset_end': 12175, 'content': 'function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }', 'contract_name': 'OAppSender', 'contract_code': '{\n    using SafeERC20 for IERC20;\n    error NotEnoughNative(uint256 msgValue);\n    error LzTokenUnavailable();\n    uint64 internal constant SENDER_VERSION = 1;\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }\n    function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }\n    function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n        return\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'public', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppSender._quote', 'start_line': 317, 'end_line': 328, 'offset_start': 12181, 'offset_end': 12571, 'content': 'function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }', 'contract_name': 'OAppSender', 'contract_code': '{\n    using SafeERC20 for IERC20;\n    error NotEnoughNative(uint256 msgValue);\n    error LzTokenUnavailable();\n    uint64 internal constant SENDER_VERSION = 1;\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }\n    function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }\n    function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n        return\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppSender._lzSend', 'start_line': 329, 'end_line': 343, 'offset_start': 12577, 'offset_end': 13160, 'content': 'function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n        return\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }', 'contract_name': 'OAppSender', 'contract_code': '{\n    using SafeERC20 for IERC20;\n    error NotEnoughNative(uint256 msgValue);\n    error LzTokenUnavailable();\n    uint64 internal constant SENDER_VERSION = 1;\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }\n    function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }\n    function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n        return\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppSender._payNative', 'start_line': 344, 'end_line': 347, 'offset_start': 13166, 'offset_end': 13356, 'content': 'function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }', 'contract_name': 'OAppSender', 'contract_code': '{\n    using SafeERC20 for IERC20;\n    error NotEnoughNative(uint256 msgValue);\n    error LzTokenUnavailable();\n    uint64 internal constant SENDER_VERSION = 1;\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }\n    function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }\n    function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n        return\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'OAppSender._payLzToken', 'start_line': 348, 'end_line': 352, 'offset_start': 13362, 'offset_end': 13623, 'content': 'function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }', 'contract_name': 'OAppSender', 'contract_code': '{\n    using SafeERC20 for IERC20;\n    error NotEnoughNative(uint256 msgValue);\n    error LzTokenUnavailable();\n    uint64 internal constant SENDER_VERSION = 1;\n    function oAppVersion() public view virtual returns (uint64 senderVersion, uint64 receiverVersion) {\n        return (SENDER_VERSION, 0);\n    }\n    function _quote(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        bool _payInLzToken\n    ) internal view virtual returns (MessagingFee memory fee) {\n        return\n            endpoint.quote(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _payInLzToken),\n                address(this)\n            );\n    }\n    function _lzSend(\n        uint32 _dstEid,\n        bytes memory _message,\n        bytes memory _options,\n        MessagingFee memory _fee,\n        address _refundAddress\n    ) internal virtual returns (MessagingReceipt memory receipt) {\n        uint256 messageValue = _payNative(_fee.nativeFee);\n        if (_fee.lzTokenFee > 0) _payLzToken(_fee.lzTokenFee);\n        return\n            endpoint.send{ value: messageValue }(\n                MessagingParams(_dstEid, _getPeerOrRevert(_dstEid), _message, _options, _fee.lzTokenFee > 0),\n                _refundAddress\n            );\n    }\n    function _payNative(uint256 _nativeFee) internal virtual returns (uint256 nativeFee) {\n        if (msg.value != _nativeFee) revert NotEnoughNative(msg.value);\n        return _nativeFee;\n    }\n    function _payLzToken(uint256 _lzTokenFee) internal virtual {\n        address lzToken = endpoint.lzToken();\n        if (lzToken == address(0)) revert LzTokenUnavailable();\n        IERC20(lzToken).safeTransferFrom(msg.sender, address(endpoint), _lzTokenFee);\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20.totalSupply', 'start_line': 358, 'end_line': 358, 'offset_start': 13835, 'offset_end': 13889, 'content': 'function totalSupply() external view returns (uint256);', 'contract_name': 'IERC20', 'contract_code': '{\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20.balanceOf', 'start_line': 359, 'end_line': 359, 'offset_start': 13895, 'offset_end': 13962, 'content': 'function balanceOf(address account) external view returns (uint256);', 'contract_name': 'IERC20', 'contract_code': '{\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20.transfer', 'start_line': 360, 'end_line': 360, 'offset_start': 13968, 'offset_end': 14036, 'content': 'function transfer(address to, uint256 value) external returns (bool);', 'contract_name': 'IERC20', 'contract_code': '{\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20.allowance', 'start_line': 361, 'end_line': 361, 'offset_start': 14042, 'offset_end': 14124, 'content': 'function allowance(address owner, address spender) external view returns (uint256);', 'contract_name': 'IERC20', 'contract_code': '{\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20.approve', 'start_line': 362, 'end_line': 362, 'offset_start': 14130, 'offset_end': 14202, 'content': 'function approve(address spender, uint256 value) external returns (bool);', 'contract_name': 'IERC20', 'contract_code': '{\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20.transferFrom', 'start_line': 363, 'end_line': 363, 'offset_start': 14208, 'offset_end': 14294, 'content': 'function transferFrom(address from, address to, uint256 value) external returns (bool);', 'contract_name': 'IERC20', 'contract_code': '{\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n    function totalSupply() external view returns (uint256);\n    function balanceOf(address account) external view returns (uint256);\n    function transfer(address to, uint256 value) external returns (bool);\n    function allowance(address owner, address spender) external view returns (uint256);\n    function approve(address spender, uint256 value) external returns (bool);\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Address.sendValue', 'start_line': 370, 'end_line': 378, 'offset_start': 14473, 'offset_end': 14802, 'content': 'function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }', 'contract_name': 'Address', 'contract_code': '{\n    error AddressInsufficientBalance(address account);\n    error AddressEmptyCode(address target);\n    error FailedInnerCall();\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n    function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Address.functionCall', 'start_line': 379, 'end_line': 381, 'offset_start': 14808, 'offset_end': 14958, 'content': 'function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }', 'contract_name': 'Address', 'contract_code': '{\n    error AddressInsufficientBalance(address account);\n    error AddressEmptyCode(address target);\n    error FailedInnerCall();\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n    function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Address.functionCallWithValue', 'start_line': 382, 'end_line': 388, 'offset_start': 14964, 'offset_end': 15355, 'content': 'function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }', 'contract_name': 'Address', 'contract_code': '{\n    error AddressInsufficientBalance(address account);\n    error AddressEmptyCode(address target);\n    error FailedInnerCall();\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n    function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Address.functionStaticCall', 'start_line': 389, 'end_line': 392, 'offset_start': 15361, 'offset_end': 15614, 'content': 'function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }', 'contract_name': 'Address', 'contract_code': '{\n    error AddressInsufficientBalance(address account);\n    error AddressEmptyCode(address target);\n    error FailedInnerCall();\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n    function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Address.functionDelegateCall', 'start_line': 393, 'end_line': 396, 'offset_start': 15620, 'offset_end': 15872, 'content': 'function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }', 'contract_name': 'Address', 'contract_code': '{\n    error AddressInsufficientBalance(address account);\n    error AddressEmptyCode(address target);\n    error FailedInnerCall();\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n    function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Address.verifyCallResultFromTarget', 'start_line': 397, 'end_line': 410, 'offset_start': 15878, 'offset_end': 16289, 'content': 'function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }', 'contract_name': 'Address', 'contract_code': '{\n    error AddressInsufficientBalance(address account);\n    error AddressEmptyCode(address target);\n    error FailedInnerCall();\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n    function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Address.verifyCallResult', 'start_line': 411, 'end_line': 417, 'offset_start': 16295, 'offset_end': 16518, 'content': 'function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }', 'contract_name': 'Address', 'contract_code': '{\n    error AddressInsufficientBalance(address account);\n    error AddressEmptyCode(address target);\n    error FailedInnerCall();\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n    function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}', 'modifiers': [], 'stateMutability': 'pure', 'returnParameters': None, 'visibility': 'internal', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'Address._revert', 'start_line': 418, 'end_line': 427, 'offset_start': 16524, 'offset_end': 16842, 'content': 'function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }', 'contract_name': 'Address', 'contract_code': '{\n    error AddressInsufficientBalance(address account);\n    error AddressEmptyCode(address target);\n    error FailedInnerCall();\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, ) = recipient.call{value: amount}("");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n    function _revert(bytes memory returndata) private pure {\n        if (returndata.length > 0) {\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}', 'modifiers': [], 'stateMutability': 'pure', 'returnParameters': [], 'visibility': 'private', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20Permit.permit', 'start_line': 431, 'end_line': 439, 'offset_start': 16900, 'offset_end': 17082, 'content': 'function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;', 'contract_name': 'IERC20Permit', 'contract_code': '{\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n    function nonces(address owner) external view returns (uint256);\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20Permit.nonces', 'start_line': 440, 'end_line': 440, 'offset_start': 17088, 'offset_end': 17150, 'content': 'function nonces(address owner) external view returns (uint256);', 'contract_name': 'IERC20Permit', 'contract_code': '{\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n    function nonces(address owner) external view returns (uint256);\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IERC20Permit.DOMAIN_SEPARATOR', 'start_line': 441, 'end_line': 441, 'offset_start': 17156, 'offset_end': 17215, 'content': 'function DOMAIN_SEPARATOR() external view returns (bytes32);', 'contract_name': 'IERC20Permit', 'contract_code': '{\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n    function nonces(address owner) external view returns (uint256);\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOAppCore.oAppVersion', 'start_line': 451, 'end_line': 451, 'offset_start': 17575, 'offset_end': 17666, 'content': 'function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);', 'contract_name': 'IOAppCore', 'contract_code': '{\n    error OnlyPeer(uint32 eid, bytes32 sender);\n    error NoPeer(uint32 eid);\n    error InvalidEndpointCall();\n    error InvalidDelegate();\n    event PeerSet(uint32 eid, bytes32 peer);\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\n    function peers(uint32 _eid) external view returns (bytes32 peer);\n    function setPeer(uint32 _eid, bytes32 _peer) external;\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOAppCore.endpoint', 'start_line': 452, 'end_line': 452, 'offset_start': 17672, 'offset_end': 17746, 'content': 'function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);', 'contract_name': 'IOAppCore', 'contract_code': '{\n    error OnlyPeer(uint32 eid, bytes32 sender);\n    error NoPeer(uint32 eid);\n    error InvalidEndpointCall();\n    error InvalidDelegate();\n    event PeerSet(uint32 eid, bytes32 peer);\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\n    function peers(uint32 _eid) external view returns (bytes32 peer);\n    function setPeer(uint32 _eid, bytes32 _peer) external;\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOAppCore.peers', 'start_line': 453, 'end_line': 453, 'offset_start': 17752, 'offset_end': 17816, 'content': 'function peers(uint32 _eid) external view returns (bytes32 peer);', 'contract_name': 'IOAppCore', 'contract_code': '{\n    error OnlyPeer(uint32 eid, bytes32 sender);\n    error NoPeer(uint32 eid);\n    error InvalidEndpointCall();\n    error InvalidDelegate();\n    event PeerSet(uint32 eid, bytes32 peer);\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\n    function peers(uint32 _eid) external view returns (bytes32 peer);\n    function setPeer(uint32 _eid, bytes32 _peer) external;\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOAppCore.setPeer', 'start_line': 454, 'end_line': 454, 'offset_start': 17822, 'offset_end': 17875, 'content': 'function setPeer(uint32 _eid, bytes32 _peer) external;', 'contract_name': 'IOAppCore', 'contract_code': '{\n    error OnlyPeer(uint32 eid, bytes32 sender);\n    error NoPeer(uint32 eid);\n    error InvalidEndpointCall();\n    error InvalidDelegate();\n    event PeerSet(uint32 eid, bytes32 peer);\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\n    function peers(uint32 _eid) external view returns (bytes32 peer);\n    function setPeer(uint32 _eid, bytes32 _peer) external;\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOAppCore.setDelegate', 'start_line': 455, 'end_line': 455, 'offset_start': 17881, 'offset_end': 17929, 'content': 'function setDelegate(address _delegate) external;', 'contract_name': 'IOAppCore', 'contract_code': '{\n    error OnlyPeer(uint32 eid, bytes32 sender);\n    error NoPeer(uint32 eid);\n    error InvalidEndpointCall();\n    error InvalidDelegate();\n    event PeerSet(uint32 eid, bytes32 peer);\n    function oAppVersion() external view returns (uint64 senderVersion, uint64 receiverVersion);\n    function endpoint() external view returns (ILayerZeroEndpointV2 iEndpoint);\n    function peers(uint32 _eid) external view returns (bytes32 peer);\n    function setPeer(uint32 _eid, bytes32 _peer) external;\n    function setDelegate(address _delegate) external;\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.eid', 'start_line': 462, 'end_line': 462, 'offset_start': 18303, 'offset_end': 18348, 'content': 'function eid() external view returns (uint32);', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.skip', 'start_line': 463, 'end_line': 463, 'offset_start': 18354, 'offset_end': 18439, 'content': 'function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.nilify', 'start_line': 464, 'end_line': 464, 'offset_start': 18445, 'offset_end': 18554, 'content': 'function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.burn', 'start_line': 465, 'end_line': 465, 'offset_start': 18560, 'offset_end': 18667, 'content': 'function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.nextGuid', 'start_line': 466, 'end_line': 466, 'offset_start': 18673, 'offset_end': 18774, 'content': 'function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.inboundNonce', 'start_line': 467, 'end_line': 467, 'offset_start': 18780, 'offset_end': 18884, 'content': 'function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.outboundNonce', 'start_line': 468, 'end_line': 468, 'offset_start': 18890, 'offset_end': 18995, 'content': 'function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.inboundPayloadHash', 'start_line': 469, 'end_line': 474, 'offset_start': 19001, 'offset_end': 19165, 'content': 'function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingChannel.lazyInboundNonce', 'start_line': 475, 'end_line': 475, 'offset_start': 19171, 'offset_end': 19279, 'content': 'function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);', 'contract_name': 'IMessagingChannel', 'contract_code': '{\n    event InboundNonceSkipped(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce);\n    event PacketNilified(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    event PacketBurnt(uint32 srcEid, bytes32 sender, address receiver, uint64 nonce, bytes32 payloadHash);\n    function eid() external view returns (uint32);\n    function skip(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce) external;\n    function nilify(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function burn(address _oapp, uint32 _srcEid, bytes32 _sender, uint64 _nonce, bytes32 _payloadHash) external;\n    function nextGuid(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (bytes32);\n    function inboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n    function outboundNonce(address _sender, uint32 _dstEid, bytes32 _receiver) external view returns (uint64);\n    function inboundPayloadHash(\n        address _receiver,\n        uint32 _srcEid,\n        bytes32 _sender,\n        uint64 _nonce\n    ) external view returns (bytes32);\n    function lazyInboundNonce(address _receiver, uint32 _srcEid, bytes32 _sender) external view returns (uint64);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingContext.isSendingMessage', 'start_line': 479, 'end_line': 479, 'offset_start': 19342, 'offset_end': 19398, 'content': 'function isSendingMessage() external view returns (bool);', 'contract_name': 'IMessagingContext', 'contract_code': '{\n    function isSendingMessage() external view returns (bool);\n    function getSendContext() external view returns (uint32 dstEid, address sender);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessagingContext.getSendContext', 'start_line': 480, 'end_line': 480, 'offset_start': 19404, 'offset_end': 19483, 'content': 'function getSendContext() external view returns (uint32 dstEid, address sender);', 'contract_name': 'IMessagingContext', 'contract_code': '{\n    function isSendingMessage() external view returns (bool);\n    function getSendContext() external view returns (uint32 dstEid, address sender);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.registerLibrary', 'start_line': 500, 'end_line': 500, 'offset_start': 20203, 'offset_end': 20250, 'content': 'function registerLibrary(address _lib) external;', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.isRegisteredLibrary', 'start_line': 501, 'end_line': 501, 'offset_start': 20256, 'offset_end': 20327, 'content': 'function isRegisteredLibrary(address _lib) external view returns (bool);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.getRegisteredLibraries', 'start_line': 502, 'end_line': 502, 'offset_start': 20333, 'offset_end': 20407, 'content': 'function getRegisteredLibraries() external view returns (address[] memory);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.setDefaultSendLibrary', 'start_line': 503, 'end_line': 503, 'offset_start': 20413, 'offset_end': 20482, 'content': 'function setDefaultSendLibrary(uint32 _eid, address _newLib) external;', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.defaultSendLibrary', 'start_line': 504, 'end_line': 504, 'offset_start': 20488, 'offset_end': 20560, 'content': 'function defaultSendLibrary(uint32 _eid) external view returns (address);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.setDefaultReceiveLibrary', 'start_line': 505, 'end_line': 505, 'offset_start': 20566, 'offset_end': 20660, 'content': 'function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.defaultReceiveLibrary', 'start_line': 506, 'end_line': 506, 'offset_start': 20666, 'offset_end': 20741, 'content': 'function defaultReceiveLibrary(uint32 _eid) external view returns (address);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.setDefaultReceiveLibraryTimeout', 'start_line': 507, 'end_line': 507, 'offset_start': 20747, 'offset_end': 20840, 'content': 'function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.defaultReceiveLibraryTimeout', 'start_line': 508, 'end_line': 508, 'offset_start': 20846, 'offset_end': 20948, 'content': 'function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.isSupportedEid', 'start_line': 509, 'end_line': 509, 'offset_start': 20954, 'offset_end': 21019, 'content': 'function isSupportedEid(uint32 _eid) external view returns (bool);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.isValidReceiveLibrary', 'start_line': 510, 'end_line': 510, 'offset_start': 21025, 'offset_end': 21130, 'content': 'function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.setSendLibrary', 'start_line': 511, 'end_line': 511, 'offset_start': 21136, 'offset_end': 21213, 'content': 'function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.getSendLibrary', 'start_line': 512, 'end_line': 512, 'offset_start': 21219, 'offset_end': 21308, 'content': 'function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.isDefaultSendLibrary', 'start_line': 513, 'end_line': 513, 'offset_start': 21314, 'offset_end': 21402, 'content': 'function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.setReceiveLibrary', 'start_line': 514, 'end_line': 514, 'offset_start': 21408, 'offset_end': 21510, 'content': 'function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.getReceiveLibrary', 'start_line': 515, 'end_line': 515, 'offset_start': 21516, 'offset_end': 21626, 'content': 'function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.setReceiveLibraryTimeout', 'start_line': 516, 'end_line': 516, 'offset_start': 21632, 'offset_end': 21733, 'content': 'function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.receiveLibraryTimeout', 'start_line': 517, 'end_line': 517, 'offset_start': 21739, 'offset_end': 21853, 'content': 'function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.setConfig', 'start_line': 518, 'end_line': 518, 'offset_start': 21859, 'offset_end': 21950, 'content': 'function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'external', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IMessageLibManager.getConfig', 'start_line': 519, 'end_line': 524, 'offset_start': 21956, 'offset_end': 22118, 'content': 'function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);', 'contract_name': 'IMessageLibManager', 'contract_code': '{\n    struct Timeout {\n        address lib;\n        uint256 expiry;\n    }\n    event LibraryRegistered(address newLib);\n    event DefaultSendLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibrarySet(uint32 eid, address newLib);\n    event DefaultReceiveLibraryTimeoutSet(uint32 eid, address oldLib, uint256 expiry);\n    event SendLibrarySet(address sender, uint32 eid, address newLib);\n    event ReceiveLibrarySet(address receiver, uint32 eid, address newLib);\n    event ReceiveLibraryTimeoutSet(address receiver, uint32 eid, address oldLib, uint256 timeout);\n    function registerLibrary(address _lib) external;\n    function isRegisteredLibrary(address _lib) external view returns (bool);\n    function getRegisteredLibraries() external view returns (address[] memory);\n    function setDefaultSendLibrary(uint32 _eid, address _newLib) external;\n    function defaultSendLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibrary(uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function defaultReceiveLibrary(uint32 _eid) external view returns (address);\n    function setDefaultReceiveLibraryTimeout(uint32 _eid, address _lib, uint256 _expiry) external;\n    function defaultReceiveLibraryTimeout(uint32 _eid) external view returns (address lib, uint256 expiry);\n    function isSupportedEid(uint32 _eid) external view returns (bool);\n    function isValidReceiveLibrary(address _receiver, uint32 _eid, address _lib) external view returns (bool);\n    function setSendLibrary(address _oapp, uint32 _eid, address _newLib) external;\n    function getSendLibrary(address _sender, uint32 _eid) external view returns (address lib);\n    function isDefaultSendLibrary(address _sender, uint32 _eid) external view returns (bool);\n    function setReceiveLibrary(address _oapp, uint32 _eid, address _newLib, uint256 _gracePeriod) external;\n    function getReceiveLibrary(address _receiver, uint32 _eid) external view returns (address lib, bool isDefault);\n    function setReceiveLibraryTimeout(address _oapp, uint32 _eid, address _lib, uint256 _expiry) external;\n    function receiveLibraryTimeout(address _receiver, uint32 _eid) external view returns (address lib, uint256 expiry);\n    function setConfig(address _oapp, address _lib, SetConfigParam[] calldata _params) external;\n    function getConfig(\n        address _oapp,\n        address _lib,\n        uint32 _eid,\n        uint32 _configType\n    ) external view returns (bytes memory config);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOFT.oftVersion', 'start_line': 565, 'end_line': 565, 'offset_start': 23084, 'offset_end': 23164, 'content': 'function oftVersion() external view returns (bytes4 interfaceId, uint64 version);', 'contract_name': 'IOFT', 'contract_code': '{\n    error InvalidLocalDecimals();\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\n    event OFTSent(\n        bytes32 indexed guid, \n        uint32 dstEid, \n        address indexed fromAddress, \n        uint256 amountSentLD, \n        uint256 amountReceivedLD \n    );\n    event OFTReceived(\n        bytes32 indexed guid, \n        uint32 srcEid, \n        address indexed toAddress, \n        uint256 amountReceivedLD \n    );\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\n    function token() external view returns (address);\n    function approvalRequired() external view returns (bool);\n    function sharedDecimals() external view returns (uint8);\n    function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\n    function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOFT.token', 'start_line': 566, 'end_line': 566, 'offset_start': 23170, 'offset_end': 23218, 'content': 'function token() external view returns (address);', 'contract_name': 'IOFT', 'contract_code': '{\n    error InvalidLocalDecimals();\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\n    event OFTSent(\n        bytes32 indexed guid, \n        uint32 dstEid, \n        address indexed fromAddress, \n        uint256 amountSentLD, \n        uint256 amountReceivedLD \n    );\n    event OFTReceived(\n        bytes32 indexed guid, \n        uint32 srcEid, \n        address indexed toAddress, \n        uint256 amountReceivedLD \n    );\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\n    function token() external view returns (address);\n    function approvalRequired() external view returns (bool);\n    function sharedDecimals() external view returns (uint8);\n    function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\n    function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOFT.approvalRequired', 'start_line': 567, 'end_line': 567, 'offset_start': 23224, 'offset_end': 23280, 'content': 'function approvalRequired() external view returns (bool);', 'contract_name': 'IOFT', 'contract_code': '{\n    error InvalidLocalDecimals();\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\n    event OFTSent(\n        bytes32 indexed guid, \n        uint32 dstEid, \n        address indexed fromAddress, \n        uint256 amountSentLD, \n        uint256 amountReceivedLD \n    );\n    event OFTReceived(\n        bytes32 indexed guid, \n        uint32 srcEid, \n        address indexed toAddress, \n        uint256 amountReceivedLD \n    );\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\n    function token() external view returns (address);\n    function approvalRequired() external view returns (bool);\n    function sharedDecimals() external view returns (uint8);\n    function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\n    function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOFT.sharedDecimals', 'start_line': 568, 'end_line': 568, 'offset_start': 23286, 'offset_end': 23341, 'content': 'function sharedDecimals() external view returns (uint8);', 'contract_name': 'IOFT', 'contract_code': '{\n    error InvalidLocalDecimals();\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\n    event OFTSent(\n        bytes32 indexed guid, \n        uint32 dstEid, \n        address indexed fromAddress, \n        uint256 amountSentLD, \n        uint256 amountReceivedLD \n    );\n    event OFTReceived(\n        bytes32 indexed guid, \n        uint32 srcEid, \n        address indexed toAddress, \n        uint256 amountReceivedLD \n    );\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\n    function token() external view returns (address);\n    function approvalRequired() external view returns (bool);\n    function sharedDecimals() external view returns (uint8);\n    function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\n    function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOFT.quoteOFT', 'start_line': 569, 'end_line': 571, 'offset_start': 23347, 'offset_end': 23505, 'content': 'function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);', 'contract_name': 'IOFT', 'contract_code': '{\n    error InvalidLocalDecimals();\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\n    event OFTSent(\n        bytes32 indexed guid, \n        uint32 dstEid, \n        address indexed fromAddress, \n        uint256 amountSentLD, \n        uint256 amountReceivedLD \n    );\n    event OFTReceived(\n        bytes32 indexed guid, \n        uint32 srcEid, \n        address indexed toAddress, \n        uint256 amountReceivedLD \n    );\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\n    function token() external view returns (address);\n    function approvalRequired() external view returns (bool);\n    function sharedDecimals() external view returns (uint8);\n    function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\n    function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOFT.quoteSend', 'start_line': 572, 'end_line': 572, 'offset_start': 23511, 'offset_end': 23624, 'content': 'function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);', 'contract_name': 'IOFT', 'contract_code': '{\n    error InvalidLocalDecimals();\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\n    event OFTSent(\n        bytes32 indexed guid, \n        uint32 dstEid, \n        address indexed fromAddress, \n        uint256 amountSentLD, \n        uint256 amountReceivedLD \n    );\n    event OFTReceived(\n        bytes32 indexed guid, \n        uint32 srcEid, \n        address indexed toAddress, \n        uint256 amountReceivedLD \n    );\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\n    function token() external view returns (address);\n    function approvalRequired() external view returns (bool);\n    function sharedDecimals() external view returns (uint8);\n    function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\n    function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\n}', 'modifiers': [], 'stateMutability': 'view', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'IOFT.send', 'start_line': 573, 'end_line': 577, 'offset_start': 23630, 'offset_end': 23826, 'content': 'function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);', 'contract_name': 'IOFT', 'contract_code': '{\n    error InvalidLocalDecimals();\n    error SlippageExceeded(uint256 amountLD, uint256 minAmountLD);\n    event OFTSent(\n        bytes32 indexed guid, \n        uint32 dstEid, \n        address indexed fromAddress, \n        uint256 amountSentLD, \n        uint256 amountReceivedLD \n    );\n    event OFTReceived(\n        bytes32 indexed guid, \n        uint32 srcEid, \n        address indexed toAddress, \n        uint256 amountReceivedLD \n    );\n    function oftVersion() external view returns (bytes4 interfaceId, uint64 version);\n    function token() external view returns (address);\n    function approvalRequired() external view returns (bool);\n    function sharedDecimals() external view returns (uint8);\n    function quoteOFT(\n        SendParam calldata _sendParam\n    ) external view returns (OFTLimit memory, OFTFeeDetail[] memory oftFeeDetails, OFTReceipt memory);\n    function quoteSend(SendParam calldata _sendParam, bool _payInLzToken) external view returns (MessagingFee memory);\n    function send(\n        SendParam calldata _sendParam,\n        MessagingFee calldata _fee,\n        address _refundAddress\n    ) external payable returns (MessagingReceipt memory, OFTReceipt memory);\n}', 'modifiers': [], 'stateMutability': 'payable', 'returnParameters': None, 'visibility': 'external', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'SafeERC20.safeTransfer', 'start_line': 587, 'end_line': 589, 'offset_start': 24226, 'offset_end': 24385, 'content': 'function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }', 'contract_name': 'SafeERC20', 'contract_code': '{\n    using Address for address;\n    error SafeERC20FailedOperation(address token);\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'SafeERC20.safeTransferFrom', 'start_line': 590, 'end_line': 592, 'offset_start': 24391, 'offset_end': 24578, 'content': 'function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }', 'contract_name': 'SafeERC20', 'contract_code': '{\n    using Address for address;\n    error SafeERC20FailedOperation(address token);\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'SafeERC20.safeIncreaseAllowance', 'start_line': 593, 'end_line': 596, 'offset_start': 24584, 'offset_end': 24808, 'content': 'function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }', 'contract_name': 'SafeERC20', 'contract_code': '{\n    using Address for address;\n    error SafeERC20FailedOperation(address token);\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'SafeERC20.safeDecreaseAllowance', 'start_line': 597, 'end_line': 605, 'offset_start': 24814, 'offset_end': 25281, 'content': 'function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }', 'contract_name': 'SafeERC20', 'contract_code': '{\n    using Address for address;\n    error SafeERC20FailedOperation(address token);\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'SafeERC20.forceApprove', 'start_line': 606, 'end_line': 612, 'offset_start': 25287, 'offset_end': 25665, 'content': 'function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }', 'contract_name': 'SafeERC20', 'contract_code': '{\n    using Address for address;\n    error SafeERC20FailedOperation(address token);\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'internal', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'SafeERC20._callOptionalReturn', 'start_line': 613, 'end_line': 618, 'offset_start': 25671, 'offset_end': 25960, 'content': 'function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }', 'contract_name': 'SafeERC20', 'contract_code': '{\n    using Address for address;\n    error SafeERC20FailedOperation(address token);\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': [], 'visibility': 'private', 'node_count': 4, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
{'type': 'FunctionDefinition', 'name': 'SafeERC20._callOptionalReturnBool', 'start_line': 619, 'end_line': 622, 'offset_start': 25966, 'offset_end': 26258, 'content': 'function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }', 'contract_name': 'SafeERC20', 'contract_code': '{\n    using Address for address;\n    error SafeERC20FailedOperation(address token);\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}', 'modifiers': [], 'stateMutability': None, 'returnParameters': None, 'visibility': 'private', 'node_count': 5, 'relative_file_path': './testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol', 'absolute_file_path': '/Users/oker/okx/Token-Check/testDownload/42161/0xb09f16f625b363875e39ada56c03682088471523/0xb09f16f625b363875e39ada56c03682088471523.sol'}
